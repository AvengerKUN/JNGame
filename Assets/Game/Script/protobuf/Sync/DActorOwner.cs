// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DActorOwner.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NGame.protobuf {

  /// <summary>Holder for reflection information generated from DActorOwner.proto</summary>
  public static partial class DActorOwnerReflection {

    #region Descriptor
    /// <summary>File descriptor for DActorOwner.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DActorOwnerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFEQWN0b3JPd25lci5wcm90byI5CgtEQWN0b3JPd25lchIMCgR1dWlkGAEg",
            "ASgFEg0KBW93bmVyGAIgASgFEg0KBWlzT3duGAMgASgIQjEKHmNuLmppc29s",
            "Lm5nYW1lLmRlbW8ucHJvdG8uc3luY6oCDk5HYW1lLnByb3RvYnVmYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NGame.protobuf.DActorOwner), global::NGame.protobuf.DActorOwner.Parser, new[]{ "Uuid", "Owner", "IsOwn" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DActorOwner : pb::IMessage<DActorOwner> {
    private static readonly pb::MessageParser<DActorOwner> _parser = new pb::MessageParser<DActorOwner>(() => new DActorOwner());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DActorOwner> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NGame.protobuf.DActorOwnerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DActorOwner() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DActorOwner(DActorOwner other) : this() {
      uuid_ = other.uuid_;
      owner_ = other.owner_;
      isOwn_ = other.isOwn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DActorOwner Clone() {
      return new DActorOwner(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private int uuid_;
    /// <summary>
    ///Actor UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private int owner_;
    /// <summary>
    ///Actor 权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "isOwn" field.</summary>
    public const int IsOwnFieldNumber = 3;
    private bool isOwn_;
    /// <summary>
    ///是否是自己的权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOwn {
      get { return isOwn_; }
      set {
        isOwn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DActorOwner);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DActorOwner other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Owner != other.Owner) return false;
      if (IsOwn != other.IsOwn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid != 0) hash ^= Uuid.GetHashCode();
      if (Owner != 0) hash ^= Owner.GetHashCode();
      if (IsOwn != false) hash ^= IsOwn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Uuid);
      }
      if (Owner != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Owner);
      }
      if (IsOwn != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOwn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uuid);
      }
      if (Owner != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Owner);
      }
      if (IsOwn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DActorOwner other) {
      if (other == null) {
        return;
      }
      if (other.Uuid != 0) {
        Uuid = other.Uuid;
      }
      if (other.Owner != 0) {
        Owner = other.Owner;
      }
      if (other.IsOwn != false) {
        IsOwn = other.IsOwn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uuid = input.ReadInt32();
            break;
          }
          case 16: {
            Owner = input.ReadInt32();
            break;
          }
          case 24: {
            IsOwn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
